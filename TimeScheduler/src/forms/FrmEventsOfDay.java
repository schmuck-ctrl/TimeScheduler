/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import classes.Event;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.border.EmptyBorder;

/**
 * Displays all events of the specified date in chronological order.
 *
 * @author Nils Schmuck
 */
public class FrmEventsOfDay extends javax.swing.JPanel {

    // <editor-fold defaultstate="collapsed" desc="Global Variables">
    /**
     * Model of {@link FrmEventsOfDay#liEventsOfDay}
     */
    private DefaultListModel<Event> modelEventsOfDay = new DefaultListModel<>();

    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Constructors">
    /**
     * Constructs a new Panel and displays the specified list.
     *
     * @param eventsOfDay The list that will be displayed.
     */
    public FrmEventsOfDay(ArrayList<Event> eventsOfDay) {
        initComponents();

        prepareList();

        setEvents(eventsOfDay);
    }

    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Methods">
    /**
     * Adds the specified model to the list and change the list cell renderer.
     *
     * @see EventUtilities.EventsOfDayListCellRenderer
     */
    private void prepareList() {
        this.liEventsOfDay.setModel((ListModel) modelEventsOfDay);
        this.liEventsOfDay.setCellRenderer(new EventUtilities.EventsOfDayListCellRenderer());
    }

    /**
     * Loads the specified collection in this list.
     * {@link FrmEventsOfDay#liEventsOfDay}
     *
     * @param eventsOfDay The collection whose elements are to be placed into
     * this list.
     */
    private void setEvents(ArrayList<Event> eventsOfDay) {
        if (eventsOfDay.size() > 0) {

            this.modelEventsOfDay.addAll(eventsOfDay);

            this.lblHeadline.setText("Your events for today:");
            this.liEventsOfDay.setSelectedIndex(0);
            this.liEventsOfDay.setVisible(true);
            btnOpen.setVisible(true);
        } else {
            lblHeadline.setText("No events for today!");
            this.liEventsOfDay.setVisible(false);
            this.btnOpen.setVisible(false);
        }

        this.pnlHeader.setBorder(new EmptyBorder(10, 10, 10, 10));
        this.pnlContent.setBorder(new EmptyBorder(10, 10, 10, 10));
    }

    /**
     * Opens a new dialog with {@link FrmEvent} inside and displays the
     * specified event.
     *
     * @param event The event to display.
     */
    private void displayEventDetails(Event event) {
        if (event != null) {
            JDialog dialog = new JDialog();

            dialog.setSize(500, 900);
            dialog.setModal(true);
            dialog.setTitle("Event details");
            dialog.add(new FrmEvent(FrmEvent.View.READ, event, dialog));
            dialog.setLocationRelativeTo(null);
            dialog.setVisible(true);
        }
    }

    // </editor-fold>
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlHeader = new javax.swing.JPanel();
        lblHeadline = new javax.swing.JLabel();
        pnlContent = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        liEventsOfDay = new javax.swing.JList<>();
        pnlFooter = new javax.swing.JPanel();
        btnOpen = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        pnlHeader.setPreferredSize(new java.awt.Dimension(313, 45));
        pnlHeader.setLayout(new java.awt.BorderLayout());
        pnlHeader.add(lblHeadline, java.awt.BorderLayout.CENTER);

        add(pnlHeader, java.awt.BorderLayout.PAGE_START);

        pnlContent.setLayout(new java.awt.BorderLayout());

        liEventsOfDay.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        liEventsOfDay.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        liEventsOfDay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                liEventsOfDayMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(liEventsOfDay);

        pnlContent.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(pnlContent, java.awt.BorderLayout.CENTER);

        pnlFooter.setPreferredSize(new java.awt.Dimension(313, 45));
        pnlFooter.setLayout(new java.awt.BorderLayout());

        btnOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendar-event-line.png"))); // NOI18N
        btnOpen.setText("Open");
        btnOpen.setPreferredSize(new java.awt.Dimension(95, 35));
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });
        pnlFooter.add(btnOpen, java.awt.BorderLayout.CENTER);

        add(pnlFooter, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    // <editor-fold defaultstate="collapsed" desc="Events">
    /**
     * Triggers the displayEventDetails() methods.
     *
     * @see FrmEventsOfDay#displayEventDetails(classes.Event)
     * @param evt The action event.
     */
    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        if (this.liEventsOfDay.getSelectedIndex() >= 0) {
            Event selctedEvent = this.modelEventsOfDay.getElementAt(this.liEventsOfDay.getSelectedIndex());
            displayEventDetails(selctedEvent);
        } else {
            JOptionPane.showMessageDialog(FrmMain.getInstance(), "You have to select a event first in order to see the details.", "No event selected", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnOpenActionPerformed

    /**
     * Triggers the displayEventDetails() methods if the selcted record is
     * clicked greater than or equal to two times.
     *
     * @param evt The mouse event.
     */
    private void liEventsOfDayMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_liEventsOfDayMousePressed
        if (evt.getClickCount() >= 2) {
            if (this.liEventsOfDay.getSelectedIndex() >= 0) {
                Event selctedEvent = this.modelEventsOfDay.getElementAt(this.liEventsOfDay.getSelectedIndex());
                displayEventDetails(selctedEvent);
            } else {
                JOptionPane.showMessageDialog(FrmMain.getInstance(), "You have to select a event first in order to see the details.", "No event selected", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_liEventsOfDayMousePressed
    // </editor-fold>
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOpen;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHeadline;
    private javax.swing.JList<String> liEventsOfDay;
    private javax.swing.JPanel pnlContent;
    private javax.swing.JPanel pnlFooter;
    private javax.swing.JPanel pnlHeader;
    // End of variables declaration//GEN-END:variables
}
